<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NotificationCheck.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>